/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package prx301_xml;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author atbgl
 */
public class NhanVienFrame extends javax.swing.JFrame {
    DefaultTableModel tableModel;
    List<Employee> empList = new ArrayList<>();
    
    /**
     * Creates new form NhanVienFrame
     */
    public NhanVienFrame() {
        initComponents();
        auto.setEnabled(false);
        txtEmpID.setEditable(false);
        tableModel = (DefaultTableModel) tblEmp.getModel();
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtEmpFullname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmpTele = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmpAddress = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbEmpGender = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtEmpDOB = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmp = new javax.swing.JTable();
        txtXpath = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnJavaX = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        Validate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        auto = new javax.swing.JButton();
        btnPDF = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Management");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Employee's Detail Info."));

        jLabel1.setText("Employee ID:");

        jLabel2.setText("Fullname:");

        jLabel4.setText("Telephone:");

        jLabel5.setText("Address:");

        jLabel6.setText("Gender:");

        cbEmpGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        jLabel7.setText("Telephone:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmpTele, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtEmpFullname, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtEmpAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(cbEmpGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmpDOB))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEmpFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtEmpDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmpTele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbEmpGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(22, 22, 22))
        );

        tblEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Emp. ID", "Fullname", "DOB", "Telephone", "Address", "Gender"
            }
        ));
        tblEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmp);

        btnJavaX.setText("Count");
        btnJavaX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJavaXActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        Validate.setText("Validate");
        Validate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidateActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        auto.setText("Auto Gen");
        auto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoActionPerformed(evt);
            }
        });

        btnPDF.setText("PDF");
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnJavaX, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(auto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Validate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(btnImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearch)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExport)
                    .addComponent(btnImport)
                    .addComponent(Validate)
                    .addComponent(btnJavaX))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(auto)
                    .addComponent(btnPDF)
                    .addComponent(btnSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(txtXpath, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtXpath)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        FileInputStream fis = null;
        try {
            // TODO add your handling code here:
            fis = new FileInputStream("employee.xml");
            SAXParserFactory factory = SAXParserFactory.newNSInstance();
            SAXParser parser = factory.newSAXParser();
            EmpHandler handler = new EmpHandler();
            
            parser.parse(fis, handler);
            
            empList = handler.getEmpList();
            
            tableModel.setRowCount(0);
            //adding xmlFile content into the table
            for(Employee emp : empList){
                tableModel.addRow(new Object[]{
                    emp.getID(), emp.getFullname(), emp.getDOB(),
                    emp.getTelephone(), emp.getAddress(), emp.getGender()
                });
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NhanVienFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(NhanVienFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(NhanVienFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NhanVienFrame.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(NhanVienFrame.class.getName()).log(Level.SEVERE, null,ex);
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Import Successfully!!!");

    }//GEN-LAST:event_btnImportActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String ID = txtEmpID.getText();
        String fullname = txtEmpFullname.getText();
        String Dob = txtEmpDOB.getText();
        String telephone = txtEmpTele.getText();
        String address = txtEmpAddress.getText();
        String gender = cbEmpGender.getSelectedItem().toString();
        StringBuilder builder = new StringBuilder();
        
        if(ID.isEmpty() || fullname.isEmpty() || Dob.isEmpty() || telephone.isEmpty() || address.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Every valueble cannot be empty!!!");
            return;
        } else if(isFullname(fullname)){
            JOptionPane.showMessageDialog(rootPane, "Fullname is invalid");
            return;
        } else {
        for(Employee emp: empList){
            if(emp.getID().equalsIgnoreCase(ID)){
            JOptionPane.showMessageDialog(rootPane, "Emp. ID existed!!!");
            return;
            }
            builder.append(emp.convertXMLString());
        }
        
        Employee emp = new Employee(ID, fullname, Dob,  telephone, address, gender);
        empList.add(emp);
        
        tableModel.addRow(new Object[] {ID, fullname, Dob, telephone, address, gender});
        
        JOptionPane.showMessageDialog(rootPane, "Save Successfully!!!");
        }
        txtEmpID.setEditable(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        StringBuilder builder = new StringBuilder();
        for (Employee emp : empList){
            builder.append(emp.convertXMLString());
        }
        String body = builder.toString();
        String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"+
            "<EmployeeList>\n" +
                body +
            "\n</EmployeeList>";
        // save to Emp.XML
        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream("employee.xml");
            
            byte[] data = xml.getBytes();
            
            fos.write(data);
        } catch (Exception e) {
            e.printStackTrace();
        } finally{
            if(fos != null){
                try {
                    fos.close();
                } catch (IOException ex) {
                    
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Export Successfully!!!");
    }//GEN-LAST:event_btnExportActionPerformed

    private void ValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValidateActionPerformed
        // TODO add your handling code here:
        boolean flag = true;
        try{XMLValidationEmployee.Validate("employee.xml", "employee.xsd");}
        catch(SAXException e){ flag = false;
            JOptionPane.showMessageDialog(rootPane, "xml file is invalid due to:" + e.getMessage());
        }
        catch (IOException ex){ flag = false; 
            JOptionPane.showMessageDialog(rootPane, "xml file is invalid due to:" + ex.getMessage());
        }
        JOptionPane.showMessageDialog(rootPane, "xml file is valid:" + flag);
    }//GEN-LAST:event_ValidateActionPerformed

    private void btnJavaXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJavaXActionPerformed
        // TODO add your handling code here:
        try {
            String ID = txtEmpID.getText().toString();
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = dbf.newDocumentBuilder();
            Document d = db.parse("employee.xml");
            XPath xp = XPathFactory.newInstance().newXPath();
            NodeList nl = (NodeList) xp.compile("//Employee").evaluate(d, XPathConstants.NODESET);
            System.out.println("Number of employee: " + nl.getLength());
            JOptionPane.showMessageDialog(rootPane, "Number of employee: " + nl.getLength());
//            System.out.println("Number of employee: " + nl.getLength());
//            System.out.println("List of emplyee info: ");
//            for(int i = 0; i < nl.getLength(); i++){
////                System.out.println("ID: " + xp.compile("./ID").evaluate(nl.item(i))+"\n");
//                JOptionPane.showMessageDialog(rootPane, "Number of Employee: " + nl.getLength()+"\n"
//                                                       +"ID: " + xp.compile("./ID").evaluate(nl.item(i))+"\n"
//                                                       +"Fullname: " + xp.compile("./Fullname").evaluate(nl.item(i))+"\n"
//                                                       +"Telephone: " + xp.compile("./Telephone").evaluate(nl.item(i))+"\n"
//                                                       +"Address: " + xp.compile("./Address").evaluate(nl.item(i))+"\n"
//                                                       +"Gender: " + xp.compile("./Gender").evaluate(nl.item(i))+"\n"); 
//                
////                nl.equals(ID)
//            }
            
//            JOptionPane.showMessageDialog(rootPane, "Search ID Emplyee: " + nl.equals(ID));
//                                                       +"ID: " + xp.compile("./ID").evaluate(nl.equals(ID))+"\n"
//                                                       +"Fullname: " + xp.compile("./Fullname").evaluate(nl.equals(ID))+"\n"
//                                                       +"Telephone: " + xp.compile("./Telephone").evaluate(nl.equals(ID))+"\n"
//                                                       +"Address: " + xp.compile("./Address").evaluate(nl.equals(ID))+"\n"
//                                                       +"Gender: " + xp.compile("./Gender").evaluate(nl.equals(ID))+"\n");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnJavaXActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        txtEmpID.setText("");
        txtEmpFullname.setText("");
        txtEmpDOB.setText("");
        txtEmpTele.setText("");
        txtEmpAddress.setText("");
        
        txtEmpID.setEditable(true);
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int i = tblEmp.getSelectedRow();
        tableModel.removeRow(i);
        empList.remove(i);
        
        txtEmpID.setText("");
        txtEmpFullname.setText("");
        txtEmpDOB.setText("");
        txtEmpTele.setText("");
        txtEmpAddress.setText("");
        
        JOptionPane.showMessageDialog(rootPane, "Deleted Successfully!!!");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int i = tblEmp.getSelectedRow();
        
        tblEmp.setValueAt(txtEmpID.getText(), i, 0);
        tblEmp.setValueAt(txtEmpFullname.getText(), i, 1);
        tblEmp.setValueAt(txtEmpDOB.getText(), i, 2);
        tblEmp.setValueAt(txtEmpTele.getText(), i, 3);
        tblEmp.setValueAt(txtEmpAddress.getText(), i, 4);
        tblEmp.setValueAt(cbEmpGender.getSelectedItem().toString(), i, 5);
        
        String ID = txtEmpID.getText();
        String fullname = txtEmpFullname.getText();
        String Dob = txtEmpDOB.getText();
        String telephone = txtEmpTele.getText();
        String address = txtEmpAddress.getText();
        String gender = cbEmpGender.getSelectedItem().toString();
        
        Employee emp = new Employee(ID, fullname, Dob, telephone, address, gender);
        
        empList.set(i, emp);
//        txtEmpID.setText();
        JOptionPane.showMessageDialog(rootPane, "Updated Successfully!!!");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseClicked
        // TODO add your handling code here:
        int i = tblEmp.getSelectedRow();
        
        txtEmpID.setText((String) tblEmp.getValueAt(i, 0).toString());
        txtEmpFullname.setText((String) tblEmp.getValueAt(i, 1).toString());
        txtEmpDOB.setText((String) tblEmp.getValueAt(i, 2).toString());
        txtEmpTele.setText((String) tblEmp.getValueAt(i, 3).toString());
        txtEmpAddress.setText((String) tblEmp.getValueAt(i, 4).toString());
        cbEmpGender.setSelectedItem((String) tblEmp.getValueAt(i, 5).toString());
        
        
        txtEmpID.setEditable(false);
        
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
    }//GEN-LAST:event_tblEmpMouseClicked

    private void autoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoActionPerformed
            
        // TODO add your handling code here:
        String[] names = {"Tran Van A", "Tran Van B", "Tran Van C", "Tran Van D", "Nguyen Thi A", "Nguyen Thi D", "Bui Van B", "Bui Van C"};
        String[] telephone = {"0783440489", "0937764390", "0906608327", "0975862345", "0986759286", "0938574626"};
        String[] addressed = {"HaNoi", "HoChiMinh", "DaNang", "CanTho"};
        String[] genders = {"Male", "Female"};
        //Date created
        for(int i = 0; i < 1000; i++){
            Date date = new Date();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Or any other format you prefer
            String dateString = dateFormat.format(date);
        //Random names
            Random rand = new Random();
            int index = rand.nextInt(names.length);
            String randomName = names[index] + i;
        //Random address
            Random rand2 = new Random();
            int index2 = rand.nextInt(addressed.length);
            String randomMaSV = addressed[index2];
        //Random Geender 
            Random rand4 = new Random();
            int index3 = rand.nextInt(genders.length);
            String randomGenders = genders[index3];
        //Random Telephone
            Random rand5 = new Random();
            int index4 = rand.nextInt(telephone.length);
            String randomTelephone = telephone[index4];

            String xyz = "<Employee>\n"
                    + "<ID>" + i + "</ID>\n"
                    + "<Fullname>" + randomName + "</Fullname>\n"
                    + "<DOB>" + dateString + "</DOB>\n"
                    + "<Telephone>" + randomTelephone + "</Telephone>\n"
                    + "<Address>" + randomMaSV + "</Address>\n"
                    + "<Gender>" + randomGenders + "</Gender>\n"
                    + "</Employee>";
            System.out.println(xyz);

        String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + xyz;
        // save to Emp.XML
        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream("employee.xml");
            
            byte[] data = xml.getBytes();
            
            fos.write(data);
        } catch (Exception e) {
            e.printStackTrace();
        } finally{
            if(fos != null){
                try {
                    fos.close();
                } catch (IOException ex) {
                    
                }
            }
        }
        }
        
    }//GEN-LAST:event_autoActionPerformed

    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
        // TODO add your handling code here:
        boolean flag = true;
        try{PDFFile.exportToPDF("employee.xml", "employee.xsd");}
        catch (IOException ex){ flag = false; 
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } catch (XPathExpressionException ex) { flag = false;
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
        JOptionPane.showMessageDialog(rootPane, "Exported Successfully!!!");
    
    }//GEN-LAST:event_btnPDFActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        try{
        // Parse the XML file
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.parse("employee.xml");

        // Create an XPath object
        XPathFactory xPathfactory = XPathFactory.newInstance();
        XPath xpath = xPathfactory.newXPath();

        // Define the ID to search for
        String idToSearch = txtSearch.getText();

        // Use XPath to search for the element with the specified ID
        XPathExpression expr = xpath.compile("//Employee[ID='" + idToSearch + "']");
        NodeList result = (NodeList) expr.evaluate(doc, XPathConstants.NODESET);
        
        // Print the result
        for (int i = 0; i < result.getLength(); i++) {
            Node node = result.item(i);
//            System.out.println(node.getNodeName() + ": " + node.getTextContent());
            JOptionPane.showMessageDialog(rootPane, node.getNodeName() + ": " + node.getTextContent());
        }
    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhanVienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhanVienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhanVienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhanVienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhanVienFrame().setVisible(true);
            }
        });
    }
    public static boolean isFullname(String str) {
    boolean isValid = true;
    String expression = "^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$"; //I know this one is wrong for sure >,<
    CharSequence inputStr = str;
    Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
    Matcher matcher = pattern.matcher(inputStr);
    if (matcher.matches()) {
        isValid = false;
    }
    return isValid;
    }
    public static boolean isTelephone(String str) {
    boolean isValid = true;
    String expression = "(0/91)?[7-9][0-9]{9}"; //I know this one is wrong for sure >,<
    CharSequence inputStr = str;
    Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
    Matcher matcher = pattern.matcher(inputStr);
    if (matcher.matches()) {
        isValid = false;
    }
    return isValid;
    }
    public static boolean isAddress(String str) {
    boolean isValid = true;
    String expression = "\\\\d+\\\\s+([a-zA-Z]+|[a-zA-Z]+\\\\s[a-zA-Z]+)"; //I know this one is wrong for sure >,<
    CharSequence inputStr = str;
    Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
    Matcher matcher = pattern.matcher(inputStr);
    if (matcher.matches()) {
        isValid = false;
    }
    return isValid;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Validate;
    private javax.swing.JButton auto;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnJavaX;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPDF;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbEmpGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmp;
    private javax.swing.JTextField txtEmpAddress;
    private javax.swing.JTextField txtEmpDOB;
    private javax.swing.JTextField txtEmpFullname;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextField txtEmpTele;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JLabel txtXpath;
    // End of variables declaration//GEN-END:variables
}
